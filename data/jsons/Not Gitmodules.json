{
  "name": "Not Gitmodules",
  "description_short": "\n\uD835\uDDE1\uD835\uDDFC\uD835\uDE01 \uD835\uDDDA\uD835\uDDF6\uD835\uDE01\uD835\uDDFA\uD835\uDDFC\uD835\uDDF1\uD835\uDE02\uD835\uDDF9\uD835\uDDF2\uD835\uDE00 is a blazing-fast alternative to Git submodules for managing external modules.\n\nIt is lightweight, production-friendly, OS-independent utility designed to effortlessly manage external modules in your project without the usual headaches.",
  "project_type": [
    "Python Package"
  ],
  "category": [
    "development",
    "version control",
    "python",
    "tools",
    "CI/CD",
    "Development Tool",
    "CLI"
  ],
  "screenshots_urls": [
    "https://i.ibb.co/tw6QRzN6/pic1.png",
    "https://i.ibb.co/CpvBwyfm/pic2.png"
  ],
  "video_urls": [
    "https://www.youtube.com/watch?v=QkFxP_6NA84"
  ],
  "logo_url": "https://i.ibb.co/tw6QRzN6/pic1.png",
  "urls": {
    "PyPI": "https://pypi.org/project/not-gitmodules/",
    "GitHub": "https://github.com/Armen-Jean-Andreasian/not_gitmodules"
  },
  "installation": "```bash\npip install not-gitmodules\n```",
  "usage": "Run `not_gitmodules` to sync all modules defined in the YAML file. Use flags for advanced options.",
  "description_long": "\n\n\ud83d\ude80 **Blazing Fast**: Powered by multi-threading, it ensures smooth and efficient performance. Download speed is **10x faster** than Git Submodules.\n\n\ud83d\udca1 **Incredibly Simple**: Just one YAML file \u2014 no registrations, no setup pain, no wasted time. If a module exists, it skips. Want to update? Delete and rerun.\n\n\u2705 **Reliable & Universal**: Built with Python \u2014 natively supported on most OSs.\n\n\u2705 **Minimal Dependencies**: Only `PyYAML`.\n\n\u2705 **Secure & Transparent**: Open-source. Third-party contributions disabled for maximum security.\n\n\u2705 **Effortless Execution**: Run `not_gitmodules` once and you're done. Want control? Use built-in flags for fine-tuned behavior.\n\n**Keep your workflow simple, and focus on what truly matters.**\n"
}